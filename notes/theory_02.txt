React Ep-02 Ignition

What is NPM?

npm is basically a package manager. It is used to add dependencies to the project and package management. We can specify our project's dependencies in package.json file, and we can use them anytime by running npm install.


Webpack vs Parcel

Parcel is a no-config, super-fast web application bundler. It offers blazing fast performance utilizing multicore processing, and requires zero configuration. Same is the case with the webpack but it is prefered for more customization. 

.parcel-cache

stores information about your project when parcel builds it, so that when it rebuilds, it doesn't have to re-parse and re-analyze everything from scratch. It's a key reason why parcel can be so fast in development mode.


What is npx

NPX stands for Node Package eXecute. It is simply an NPM package runner. It allows developers to execute any Javascript Package available on the NPM registry without even installing it. NPX is installed automatically with NPM version 5.2.0 and above



What is dependencies and devDependencies

A dependency is a library that a project needs to function effectively. DevDependencies are the packages a developer needs during development.



What is Tree Shaking?

Tree shaking is a term commonly used within a JavaScript context to describe the removal of dead code. This is important for preparing code that is production ready, for example with clean structures and minimal file size.


Hot Module Replacement HMR?

Hot Module Replacement (HMR) exchanges, adds, or removes modules while an application is running, without a full reload. 

This can significantly speed up development in a few ways:

Retain application state which is lost during a full reload.
Save valuable development time by only updating what's changed.
Instantly update the browser when modifications are made to CSS/JS in the source code, which is almost comparable to changing styles directly in the browser's dev tools.


Parcel has some excellent features like:-

1. Local Server: Parcel's builtin dev server is automatically started when you run the default parcel command, which is a shortcut for parcel serve . By default, it starts a server at http://localhost:1234

2. Minification: Minification reduces the file size of your output bundles by removing whitespace, renaming variables to shorter names, and many other optimizations.

3. Tree shaking: In production builds, Parcel statically analyzes the imports and exports of each module, and removes everything that isn't used. This is called "tree shaking" or "dead code elimination". Tree shaking is supported for both static and dynamic import(), CommonJS and ES modules, and even across languages with CSS modules.

4. Differential bundling:

Parcel automatically produces a <script type="module"> with modern JavaScript syntax, as well as a fallback <script nomodule> for older browsers when necessary. This reduces bundle sizes for a majority of users by avoiding transpilation of features like classes, async/await, and more.

5. Content hashing:

Parcel automatically includes content hashes in the names of all output files, which enables long-term browser caching. Whenever the contents of a bundle changes, the hash included in the filename will be updated, triggering invalidation of CDN and browser caches.


What is .gitignore? what should we add and not add into it?

.gitignore is a folder which is always ignored by git so that irrelevant and regeneratable codes and packages can not be pushed into git which in turn makes our application light and if we need anything from the .gitignore then we can easily regenerate them.
for ex:- we should add node_modules, dist and parcel-cache etc into our .gitignore and we should not add package.json and package-lock.json into .gitignore as it contains the exact version of the package dependency, the location of the package, a hash that verifies the integrity of the package, list of packages it requires, and, a list of dependencies.

package-lock.json vs package.json

package-lock.json is created for locking the dependency with the installed version. It will install the exact latest version of that package in your application and save it in package.json. Letâ€™s say if the current version of the package is 1.3.2 then it will save the version with (^) sign. Here carot(^) means, it will support any higher version with major version 1 for eg. 1.2.2. 

Without package-lock.json, there might be some differences in installed versions in different environments. To overcome this problem, package.lock.json is created to have the same results in every environment. It should be in source control with the package.json file because if any other user will clone the project and install dependencies then it will install the exact same dependencies as in package.lock.json to avoid differences.


Do not ever edit package-lock.json manually as it can create irregularities in the application



What is node_modules and is it good to push them on git?
 
node_modules are just directory created by npm and it is a way fo tracking each package we install locally.  it can easily be regenerated so it is not a goot idea to push it onto the git.

Dist folder?

it is a folder which stores a compact and final code which can be directly used in production and it has only relevant codes in it.


what is browserslist?

browserslist is a configuration file that determines which browsers your project should support
 

different bundlers?
parcel
webpack
vite

caret ^ allows minor versions updates while tilda ~ allows major version updates

<script> vs <sript type="async"> vs <script type="defer">


1. <script>
html is parsed by browser and if a script is there then html rendering will be paused and script will be fetched and then script will be executed and then again html will be parsed.

2.<script type="async">
html is parsed and if script is there then it will be fetched asynchronously but when it is fetched then html parsing will be stopped and script will be executed and then again html parsing will be done.

3.<script type="defer">
html parsing and any script fetching(if any) is done asynchronously and completely and after the whole html is parsed then script will be executed.

defer is generally preferred.